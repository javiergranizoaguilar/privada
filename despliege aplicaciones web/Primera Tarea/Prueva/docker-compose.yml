services:
  web:
    networks: [frontend,backend]
    build:
      context: ./services/web
      dockerfile: Dockerfile
    expose: ["80"]
    ports:
      - "${WEB_PORT}-8088:80"
    depends_on:
       db:
        condition: service_healthy
    
  db:
    networks: [backend]
    image: mariadb:10.5
    environment:
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_ROOT_USER: ${MYSQL_ROOT_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - dbdata:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -uroot -p\"$${MYSQL_ROOT_PASSWORD}\" --silent"]
      interval: 5s
      timeout: 3s
      retries: 20
      start_period: 20s
  phpmyadmin:
    networks: [frontend,backend]
    image: phpmyadmin:5
    ports:
      - "${PMA_PORT}:80"
    environment:
      PMA_HOST: db
      PMA_USER: ${MYSQL_USER}
      PMA_PASSWORD: ${MYSQL_PASSWORD}
  proxy:
    networks: [backend,frontend]
    image: nginx:alpine
    ports:
      - "8090:80"      # HTTP â†’ HTTPS redirection
      - "8443:443"     # HTTPS main site
      - "8080:8080"    # Tomcat proxy
    volumes:
      - ./services/nginx/conf.d:/etc/nginx/conf.d:ro 
      - ./certs:/etc/nginx/certs:ro
    depends_on:
      web:
        condition: service_started
  backup:
    networks: [backend,frontend]
    image: alpine:3
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
    volumes:
      - ./backup.sh:/backup.sh:ro
      - ./backups:/backups
    command: sh -c "apk add --no-cache mariadb-client && while true; do sh /backup.sh; sleep 60; done"
    depends_on:
      - db
  tomcat:
    networks: [backend]
    image: tomcat:9.0
    expose: ["8080"]
    volumes:
      - ./services/tomcat/webapps/sample.war:/usr/local/tomcat/webapps/sample.war
volumes:
  dbdata:

networks:
  frontend:
  backend: